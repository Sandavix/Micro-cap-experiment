name: portfolio-bot

on:
  workflow_dispatch:
  schedule:
    # 13:35 UTC ≈ 15:35 en été en Suisse (marchés US ouverts +5 min)
    - cron: '35 13 * * 1-5'

permissions:
  contents: write

concurrency:
  group: portfolio-bot
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      ALPACA_API_KEY: ${{ secrets.ALPACA_API_KEY }}
      ALPACA_SECRET_KEY: ${{ secrets.ALPACA_SECRET_KEY }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # --- Bloc corrigé : Debunk Error (run & verify) ---
      - name: Debunk Error (run & verify)
        env:
          # On respecte ta variable repo existante (casse incluse)
          EXECUTE_PAPER: ${{ vars.executePaper }}
          ALPACA_API_KEY: ${{ secrets.ALPACA_API_KEY }}
          ALPACA_SECRET_KEY: ${{ secrets.ALPACA_SECRET_KEY }}
        run: |
          set -Eeuo pipefail

          echo "executePaper=${EXECUTE_PAPER}"
          python --version

          # --- Run trading script (comme Nathan) ---
          if [[ "${EXECUTE_PAPER}" == "true" ]]; then
            echo "[RUN] Paper trading ON"
            python trading_script.py | tee run.log
          else
            echo "[RUN] Dry-run (no orders sent)"
            python trading_script.py --dry-run | tee run.log
          fi

          echo "---- tail run.log (last 200) ----"
          tail -n 200 run.log || true

          # --- Verify with Alpaca (did anything actually go out?) ---
          echo "---- Verify recent Alpaca orders (last 5) ----"
          BASE_URL="https://paper-api.alpaca.markets"
          curl -s \
            -H "APCA-API-KEY-ID: ${ALPACA_API_KEY}" \
            -H "APCA-API-SECRET-KEY: ${ALPACA_SECRET_KEY}" \
            "${BASE_URL}/v2/orders?status=all&limit=5&direction=desc" > alpaca_orders.json || echo "[]"

          # jq est généralement présent, sinon on l'installe vite fait
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update -y >/dev/null 2>&1 || true
            sudo apt-get install -y jq >/dev/null 2>&1 || true
          fi

          COUNT=$(jq 'length' alpaca_orders.json 2>/dev/null || echo 0)
          echo "[ALPACA] orders_returned=${COUNT}"
          jq -r '.[] | "\(.submitted_at // "?")  \(.symbol // "?")  \(.side // "?")  qty=\(.qty // "?")  status=\(.status // "?")  id=\(.id // "?")"' alpaca_orders.json || true

      - name: Commit outputs
        if: always()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "Auto run $(date -u +%F)" || echo "No changes"
          git pull --rebase || true
          git push || true
