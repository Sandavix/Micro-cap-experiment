name: portfolio-bot

on:
  workflow_dispatch:
  schedule:
    - cron: '35 13 * * 1-5'  # 13:35 UTC ≈ 15:35 à Vevey (été)

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      ALPACA_API_KEY: ${{ secrets.ALPACA_API_KEY }}
      ALPACA_SECRET_KEY: ${{ secrets.ALPACA_SECRET_KEY }}
      EXECUTE_PAPER: ${{ vars.EXECUTE_PAPER || 'false' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: python -m pip install --upgrade pip
      - run: pip install -r requirements.txt

      # Lance le script de Nathan. Ajuste le chemin selon l'endroit où il est dans TON dépôt importé.
      - name: Generate plan / decisions
        run: |
          if [ -f "trading_script.py" ]; then
            python trading_script.py --dry-run
          elif [ -f "Scripts and CSV Files/trading_script.py" ]; then
            python "Scripts and CSV Files/trading_script.py" --dry-run
          else
            echo "trading_script.py introuvable"; exit 1
          fi

      # Si tu veux commit les fichiers générés (CSV/logs/graphs) :
      - name: Commit outputs
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add . || true
          git commit -m "Auto run $(date -u +%F)" || echo "No changes"
          git push || true

      # Si tu veux passer des ordres réels en Paper, enlève --dry-run et garde ce garde-fou :
      - name: Execute on Alpaca (Paper)
        if: env.EXECUTE_PAPER == 'true'
        run: |
          if [ -f "trading_script.py" ]; then
            python trading_script.py
          elif [ -f "Scripts and CSV Files/trading_script.py" ]; then
            python "Scripts and CSV Files/trading_script.py"
          fi
